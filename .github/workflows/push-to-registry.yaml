name: Build and publish the container image

"on":
  push:
    tags:
      - '*'

jobs:
  build-images:
    name: Build image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get tag
        id: get-tag
        run: echo "tag=$(git describe --tags HEAD)" >> $GITHUB_OUTPUT

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v8

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Build Docker image
        id: build
        run: |
          nix build -L --accept-flake-config .#docker.${{ matrix.arch }}
          echo "path=$(realpath result)" >> $GITHUB_OUTPUT

      - name: Upload image
        uses: actions/upload-artifact@v3
        with:
          name: container-${{ matrix.arch }}
          path: ${{ steps.build.outputs.path }}
          retention-days: 1

  push-image:
    name: Push multi-arch image
    needs: build-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get tag
        id: get-tag
        run: echo "tag=$(git describe --tags HEAD)" >> $GITHUB_OUTPUT

      - name: Download x86_64 image
        uses: actions/download-artifact@v3
        with:
          name: container-x86_64
          path: ./x86_64-image

      - name: Download aarch64 image
        uses: actions/download-artifact@v3
        with:
          name: container-aarch64
          path: ./aarch64-image

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load and push images
        run: |
          # Load images
          docker load < ./x86_64-image/$(ls ./x86_64-image)
          docker load < ./aarch64-image/$(ls ./aarch64-image)

          # Get the image name from loaded images
          IMAGE_NAME=$(docker images --format "{{.Repository}}:{{.Tag}}" | head -n 1)

          # Tag with GitHub Container Registry and version
          docker tag $IMAGE_NAME ghcr.io/${{ github.repository }}:${{ steps.get-tag.outputs.tag }}

          # Push to registry
          docker push ghcr.io/${{ github.repository }}:${{ steps.get-tag.outputs.tag }}
