name: Build

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - uses: nixbuild/nix-quick-install-action@v30
        nix_conf: |
          keep-env-derivations = true
          keep-outputs = true

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never

      - name: Set up Nix environment
        uses: nicknovitski/nix-develop@v1

      - name: flake8
        run: |
          uv run flake8 ./bot/**/*.py

      - name: pylint
        run: |
          uv run pylint ./bot/**/*.py

      - name: black formatting
        run: |
          uv run black --check --diff ./bot/**/*.py

      - name: build
        run: |
          nix build .
